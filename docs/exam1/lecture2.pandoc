
Lecture 2 - Tensor review, Anisotropic Elasticity

Dr. Nicholas Smith

Wichita State University, Department of Aerospace Engineering

20 January 2022


## schedule

-   20 Jan - Tensor review, Anisotropic Elasticity
-   25 Jan - Coordinate Transformation
-   27 Jan - 1D Micromechanics (HW1 Due)
-   1 Feb - Orientation Averaging


## outline

- index notation
- anisotropic elasticity


# index notation


## index notation

-   Consider the following
-   \\(s = a_1 x_1 + a_2 x_2 + ... + a_n x_n\\)
-   Which we could also write as

\\[s = \sum_{i=1}^{n}a_ix_i\\]

-   Using index notation, and Einstein’s summation convention, we can also write this as

\\[s = a_ix_i\\]


## dummy index

-   In index notation, a repeated index implies summation
-   This index is also referred to as a dummy index
-   It is called a “dummy index” because the expression would have the same meaning with any index in its place
-   i.e. *i*, *j*, *k*, etc. would all have the same meaning when repeated




## dummy index

-   Note, no index may be repeated more than once, thus the expression

\\[s = \sum_{i=1}^{n}a_ib_ix_i\\]

could not be directly written in index notation



## free index

-   Any index which is not repeated in an index notation expression is referred to as a free index
-   The number of free indexes in an expression indicate the tensor order of that expression
-   No free indexes = scalar expression (0-order tensor)
-   One free index = vector expression (1st-order tensor)
-   Two free indexes = matrix expression (2nd-order tensor)



## index notation

:::::::::::::: {.columns}
::: {.column width="50%"}
- Free index is not repeated (on any term)
- Free index takes all values (1,2,3)
- e.g. \\(u_i = \langle u_1, u_2, u_3 \rangle\\)
- Free indexes must match across terms in an expression or equation

:::
::: {.column width="50%"}
- Dummy index is repeated on at least one term
- Dummy index indicates summation over all values
- e.g. \\(\sigma_{ii} = \sigma_{11} + \sigma_{22} + \sigma_{33}\\)
- Index can not be used more than twice in the same term (\\(A_{ij}B_{jk}C_{kl}\\) is good, \\(A_{ij}B_{ij}C_{ij}\\) is not)

:::
::::::::::::::


## dummy index

-   The dummy index can be triggered by any repeated index in a *term*.
-   Summation or not?
    - \\(a_i + b_{ij}c_j\\)
    - \\(a_{ij}b_{ij}\\)
    - \\(a_{ij} + b_{ij}c_j\\)



## matrix multiplication

-   How can we write matrix multiplication in index notation?

\\[\begin{bmatrix}
    a_{11} & a_{12} \\
    a_{21} & a_{22}
  \end{bmatrix}
  \begin{bmatrix}
    b_{11} & b_{12} \\
    b_{21} & b_{22}
  \end{bmatrix} =
  \begin{bmatrix}
    c_{11} & c_{12} \\
    c_{21} & c_{22}
\end{bmatrix}\\]




# special symbols



## kronecker delta

-   For convenience we define two symbols in index notation
-   *Kronecker delta* is a general tensor form of the Identity Matrix

\\[\delta_{ij} = \left\{
\begin{array}{ll}
  1& \text{if $i=j$}\\
  0& \text{otherwise}
\end{array}
\right. = \begin{bmatrix}
  1 & 0 & 0\\
  0 & 1 & 0 \\
  0 & 0 & 1
\end{bmatrix}\\]

-   Is also used for higher order tensors



## kronecker delta

-   \\(\delta_{ij} = \delta_{ji}\\)
-   \\(\delta_{ii} = 3\\)
-   \\(\delta_{ij} a_j = a_{i}\\)
-   \\(\delta_{ij} b_{ij} = b_{ii}\\)



## alternating symbol

-   *alternating symbol* or *permutation symbol*

\\[\epsilon_{ijk} = \left\{
\begin{array}{rl}
  1 & \text{if $ijk$ is an even permutation of 1,2,3}\\
  -1 & \text{if $ijk$ is an odd permutation of 1,2,3}\\
  0 & \text{otherwise}
\end{array}
\right.\\]



## alternating symbol

-   This symbol is not used as frequently as the *Kronecker delta*
-   For our uses in this course, it is enough to know that 123, 231, and 312 are even permutations
-   321, 132, 213 are odd permutations
-   all other indexes are zero
-   \\(\epsilon_{ijk} \epsilon_{imn} = \delta_{jm}\delta_{kn} - \delta_{jn}\delta{mk}\\)



# tensor algebra



## substitution

-   When solving tensor equations, we often need to manipulate expressions
-   We need to make sure the correct indexes are used when substituting, for example

\\[a_i = U_{im}{b_m} \label{eq:first} \tag{1}\\]

\\[b_i = V_{im}{c_m} \label{eq:second} \tag{2}\\]

-   To substitute (2) into (1), we first need to change indexes



## substitution

-   We need to change the free index, *i*, to *m* in (2)
-   Since *m* is already used as the dummy index, we need to change that too

\\[b_m = V_{mj}{c_j} \label{eq:third} \tag{3}\\]

-   We can now make the substitution

\\[a_i = U_{im}V_{mj}{c_j} \label{eq:fourth} \tag{4}\\]



## multiplication

-   We need to be careful with indexes when multiplying expressions
-   \\(p = a_m b_m\\) and \\(q = c_m d_m\\)
-   We can express, *pq*, but remember the dummy index cannot be repeated more than once
-   \\(pq \ne a_m b_m c_m d_m\\)  
-   Instead we must change the dummy index in one of the expressions first
-   \\(pq = a_m b_m c_n d_n\\)



## factoring

-   In the following expression, we would like to factor out *n*, but it has different indexes
-   \\(\sigma_{ij}n_j - \lambda n_i = 0\\)
-   Recall \\(\delta_{ij}a_j = a_i\\) we can rewrite \\(n_i = \delta_{ij}{nj}\\)
-   \\(\sigma_{ij}n_j - \lambda \delta_{ij}{nj} = 0\\)
-   \\((\sigma_{ij} - \lambda \delta_{ij}){nj} = 0\\)



## contraction

-   \\(\sigma_{ii}\\) is the contraction of \\(\sigma_{ij}\\)
-   This can often be a useful tool in solving tensor equations
-   \\(\sigma_{ij} = \lambda \Delta \delta_{ij} + 2\mu E_{ij}\\)
-   \\(\sigma_{ii} = 3\lambda \Delta + 2\mu E_{ii}\\)



# tensor calculus



## partial derivative

-   We indicate (partial) derivatives using a comma
-   In three dimensions, we take the partial derivative with respect to each variable (*x*, *y*, *z* or \\(x_1\\), \\(x_2\\), and \\(x_3\\))
-   For example a scalar property, such as density, can have a different value at any point in space
-   \\(\rho = \rho(x_1, x_2, x_3)\\)
-   \\(\rho_{,i} = \frac{\partial}{\partial x_i} \rho = \left \langle \frac{\partial \rho }{\partial x_1}, \frac{\partial \rho }{\partial x_2}, \frac{\partial \rho }{\partial x_3} \right\rangle\\)



## partial derivative

-   Similarly, if we take the partial derivative of a vector, it produces a matrix

\\[u_{i,j} = \frac{\partial}{\partial x_j} u_i = \begin{bmatrix}
  \frac{\partial u_1}{\partial x_1} & \frac{\partial u_1}{\partial x_2} & \frac{\partial u_1}{\partial x_3}\\
  \frac{\partial u_2}{\partial x_1} & \frac{\partial u_2}{\partial x_2} & \frac{\partial u_2}{\partial x_3}\\
  \frac{\partial u_3}{\partial x_1} & \frac{\partial u_3}{\partial x_2} & \frac{\partial u_3}{\partial x_3}
\end{bmatrix}\\]



# dyadic notation



## dyadic notation

-   Dyadic notation is sometimes called tensor product notation
-   Dyadic product: \\(C_{ij} = a_i b_j\\) is written as \\(C = a \otimes b\\)
-   Double dot product: \\(A_{ij} B_{ji} = c\\) is written as \\(A : B = c\\)



# transformation



## linear transformation

-   Let us consider some transformation, **T**, which transforms any vector into another vector
-   If we transform **T** *a* = *c* and **T** *b* = *d*
-   We call **T** a linear transformation (and a tensor) if

\\[\begin{aligned}
  \textbf{T}(\textbf{a} + \textbf{b}) &= \textbf{Ta} + \textbf{Tb}\\
  \textbf{T}(\alpha \textbf{a}) = \alpha\textbf{Ta}
\end{aligned}\\]

-   Where \\(\alpha\\) is any arbitrary scalar and *a*, *b* are arbitrary vectors



## coordinate transformation in two dimensions

![An arbitrary vector drawn in the x-y coordinate system, with a transformed coordinate system overlayed such that \\(x_1\\) aligns with the direction of the vector](../images/trans-vector.svg) <!-- .element width="60%" -->




## coordinate transformation in two dimensions

-   The vector, *v*, remains fixed, but we transform our coordinate system
-   In the new coordinate system, the \\(x_2^\prime\\) portion of *v* is zero.
-   To transform the coordinate system, we first define some unit vectors.
-   \\(\hat{e}_1\\) is a unit vector in the direction of \\(x_1\\), while \\(\hat{e}_1^\prime\\) is a unit vector in the direction of \\(x_1^\prime\\)



## coordinate transformation in two dimensions

![Unit vector have been overlayed on top of the axes drawn previously, as described in the previous slide](../images/trans-vec-unit.svg) <!-- .element width="60%" -->



## coordinate transformation in two dimensions

-   For this example, let us assume \\(v = \langle 2, 2 \rangle\\) and \\(\theta = 45^\circ\\)
-   We can write the transformed unit vectors, \\(\hat{e}_1^\prime\\) and \\(\hat{e}_2^\prime\\) in terms of \\(\hat{e}_1\\), \\(\hat{e}_2\\) and the angle of rotation, \\(\theta\\).

\\[\begin{aligned}
    \hat{e}_1^\prime &= \langle \hat{e}_1 \cos \theta , \hat{e}_2 \sin \theta \rangle\\
    \hat{e}_2^\prime &= \langle -\hat{e}_1 \sin \theta , \hat{e}_2 \cos \theta \rangle
\end{aligned}\\]



## coordinate transformation in two dimensions

-   We can write the vector, *v*, in terms of the unit vectors describing our axis system
-   \\(v = v_1 \hat{e}_1 + v_2 \hat{e}_2\\)
-   (note: \\(\hat{e}_1=\langle 1, 0 \rangle\\) and \\(\hat{e}_2 = \langle 0,1 \rangle\\))
-   \\(v = \langle 2, 2 \rangle = 2\langle 1, 0 \rangle + 2\langle 0, 1 \rangle\\)



## coordinate transformation in two dimensions

-   When expressed in the transformed coordinate system, we refer to \\(v^\prime\\)
-   \\(v^\prime = \langle v_1 \cos \theta + v_2 \sin \theta, -v_1 \sin \theta + v_2 \cos \theta\\)
-   \\(v^\prime = \langle 2\sqrt{2}, 0 \rangle\\)
-   We can recover the original vector from the transformed coordinates:
-   \\(v = v_1^\prime \hat{e}_1^\prime + v_2^\prime \hat{e}_2^\prime\\)
-   (note: \\(\hat{e}_1^\prime=\langle \frac{\sqrt{2}}{2},\frac{\sqrt{2}}{2} \rangle\\) and \\(\hat{e}_2^\prime = \langle -\frac{\sqrt{2}}{2},\frac{\sqrt{2}}{2} \rangle\\)}
-   \\(v = 2\sqrt{2}\langle \frac{\sqrt{2}}{2},\frac{\sqrt{2}}{2} \rangle, 0 \langle -\frac{\sqrt{2}}{2},\frac{\sqrt{2}}{2} \rangle = \langle 2, 2 \rangle\\)



## general coordinate transformation

-   Coordinate transformation can become much more complicated in three dimensions, and with higher-order tensors
-   It is convenient to define a general form of the coordinate transformation in index notation
-   We define \\(Q_{ij}\\) as the cosine of the angle between the \\(x_i^\prime\\) axis and the \\(x_j\\) axis.
-   This is also referred to as the "direction cosine"

\\[Q_{ij} = \cos(x_i^\prime, x_j)\\]



## mental and emotional health warning

- Different textbooks flip the definition of \\(Q_{ij}\\) (Elasticity and Continuum texts have opposite definitions, for example)
- The result gives the transpose
- Always use equations (next slide) from the same source as your \\(Q_{ij}\\) definition



## general coordinate transformation

-   We can transform any-order tensor using \\(Q_{ij}\\)
-   Vectors (first-order tensors): \\(v_i^\prime = Q_{ij} v_j\\)
-   Matrices (second-order tensors): \\(\sigma_{ij}^\prime = Q_{im}Q_{jn} \sigma_{mn}\\)
-   Fourth-order tensors: \\(C_{ijkl}^\prime = Q_{im}Q_{jn}Q_{ko}Q_{lp} C_{mnop}\\)



## general coordinate transformation

-   We can use this form on our 2D transformation example

\\[\begin{aligned}
  Q_{ij} &= \cos (x_i^\prime, x_j)\\
	&=
  \begin{bmatrix}
  \cos (x_1^\prime, x_1) & \cos (x_1^\prime, x_2)\\
  \cos (x_2^\prime, x_1) & \cos (x_2^\prime, x_2)
  \end{bmatrix}\\
  &= \begin{bmatrix}
  \cos \theta & \cos (90-\theta)\\
  \cos (90+\theta) & \cos \theta
  \end{bmatrix} \\
  &= \begin{bmatrix}
  \cos \theta & \sin \theta \\
  -\sin \theta & \cos \theta
  \end{bmatrix}
\end{aligned}\\]



## general coordinate transformation

-   We can similarly use \\(Q_{ij}\\) to find tensors in the original coordinate system
-   Vectors (first-order tensors): \\(v_j = Q_{ij} v_i^\prime\\)
-   Matrices (second-order tensors): \\(\sigma_{mn} = Q_{im}Q_{jn} \sigma_{ij}^\prime\\)
-   Fourth-order tensors: \\(C_{mnop} = Q_{im}Q_{jn}Q_{ko}Q_{lp} C_{ijkl}^\prime\\)



## general coordinate transformation

-   We can derive some interesting properties of the transformation tensor, \\(Q_{ij}\\)
-   We know that \\(v_i^\prime = Q_{ij} v_j\\) and that \\(v_j = Q_{ij} v_i^\prime\\)
-   If we substitute (changing the appropriate indexes) we find:
-   \\(v_j = Q_{ij} Q_{ik} v_k\\)
-   We can now use the Kronecker Delta to substitute \\(v_j = \delta_{jk}v_k\\)
-   \\(\delta_{jk}v_k = Q_{ij} Q_{ik} v_k\\)



# examples



## example

:::::::::::::: {.columns}
::: {.column width="50%"}
![An empty 3D axis](../images/3d-axis.svg)<!-- .element width="90%" -->

:::
::: {.column width="50%"}
- Find \\(Q_{ij}^1\\) for rotation of \\(60^\circ\\) about \\(x_2\\) 
- Find \\(Q_{ij}^2\\) for rotation of \\(30^\circ\\) about \\(x_3^\prime\\)
- Find \\(e_{i}^{\prime\prime}\\) after both rotations 

:::
::::::::::::::


## example

![An empty 3D axis with a superposed axis that has been rotated about the y-axis](../images/3d-y-rot.svg)<!-- .element width="40%" -->



## example

![An empty 3D axis with a superposed axis that has been rotated about the y-axis, and a further superposed rotation about the new z-axis](../images/3d-z-rot.svg)<!-- .element width="40%" -->




## example

-   \\(Q_{ij}^1 = \cos(x_i^\prime,x_j)\\)
-   \\(Q_{ij}^2 = \cos(x_i^{\prime\prime},x_j^\prime)\\)

\\[Q_{ij}^1 = \begin{bmatrix}
  \cos 60 & \cos 90 & \cos 150\\
  \cos 90 & \cos 0 & \cos 90\\
  \cos 30 & \cos 90 & \cos 60
\end{bmatrix}\\]

\\[Q_{ij}^2 = \begin{bmatrix}
  \cos 30 & \cos 60 & \cos 90\\
  \cos 120 & \cos 30 & \cos 90\\
  \cos 90 & \cos 90 & \cos 0
\end{bmatrix}\\]



## example

-   We now use \\(Q_{ij}\\) to find \\(\hat{e}_i^\prime\\) and \\(\hat{e}_i^{\prime \prime}\\)
-   First, we need to write \\(\hat{e}_i\\) in a manner more consistent with index notation
-   We will indicate axis direction with a superscript, e.g. \\(\hat{e}_1 = e_i^1\\)
-   \\(e_i^\prime = Q_{ij}^1 e_j\\)
-   \\(e_i^{\prime\prime} = Q_{ij}^2 e_j^\prime\\)
-   How do we find \\(e_i^{\prime\prime}\\) in terms of \\(e_i\\)?




# anisotropic elasticity



## stiffness

-   In 3D, Hooke’s Law for linearly elastic materials is

\\[\sigma_{ij} = C_{ijkl} \epsilon_{kl}\\]

-   For isotropic materials, \\(C_{ijkl}\\) can be expressed in terms of two constants
-   In general (anisotropic materials) more constants are needed and we use the full tensor



## engineering notation

-   Fourth-order tensors are cumbersome to write, we often use engineering notation
-   \\(\sigma\\) and \\(\epsilon\\) are written as vectors and \\(C_{ijkl}\\) is written as a matrix.
-   NOTE: Although \\(\sigma\\), \\(\epsilon\\) and \\(C_{ijkl}\\) are tensors, their counterparts in engineering notation are NOT formal tensors
-   This means that the usual transformation laws do not apply




## engineering notation

\\[\begin{bmatrix}
  \sigma_{11}\\
  \sigma_{22} \\
  \sigma_{33} \\
  \sigma_{23} \\
  \sigma_{13} \\
  \sigma_{12}
  \end{bmatrix}
  = \begin{bmatrix}
  C_{1111} & C_{1122} & C_{1133} & C_{1123} & C_{1113} & C_{1112} \\
  C_{1122} & C_{2222} & C_{2233} & C_{2223} & C_{1322} & C_{1222} \\
  C_{1133} & C_{2233} & C_{3333} & C_{2333} & C_{1333} & C_{1233} \\
  C_{1123} & C_{2223} & C_{2333} & C_{2323} & C_{1323} & C_{1223} \\
  C_{1113} & C_{1322} & C_{1333} & C_{1323} & C_{1313} & C_{1213} \\
  C_{1112} & C_{1222} & C_{1233} & C_{1223} & C_{1213} & C_{1212}
  \end{bmatrix}\begin{bmatrix}
  E_{11} \\
	E_{22} \\
	E_{33} \\
	2E_{23} \\
	2E_{13} \\
	2E_{12}
\end{bmatrix}\\]



## compliance

\\[\begin{bmatrix}
  E_{11} \\
	E_{22} \\
	E_{33} \\
	2E_{23} \\
	2E_{13} \\
	2E_{12}
  \end{bmatrix}
  = \begin{bmatrix}
  S_{1111} & S_{1122} & S_{1133} & S_{1123} & S_{1113} & S_{1112} \\
  S_{1122} & S_{2222} & S_{2233} & S_{2223} & S_{1322} & S_{1222} \\
  S_{1133} & S_{2233} & S_{3333} & S_{2333} & S_{1333} & S_{1233} \\
  S_{1123} & S_{2223} & S_{2333} & S_{2323} & S_{1323} & S_{1223} \\
  S_{1113} & S_{1322} & S_{1333} & S_{1323} & S_{1313} & S_{1213} \\
  S_{1112} & S_{1222} & S_{1233} & S_{1223} & S_{1213} & S_{1212}
  \end{bmatrix}\begin{bmatrix}
  \sigma_{11} \\
	\sigma_{22} \\
	\sigma_{33} \\
	\sigma_{23} \\
	\sigma_{13} \\
	\sigma_{12}
\end{bmatrix}\\]



## physical interpretation

-   If we now consider the case of uniaxial tension, we see that

\\[\begin{aligned}
  E_{11} &= S_{1111} \sigma_{11}\\
  E_{22} &= S_{1122} \sigma_{11}\\
  E_{33} &= S_{1133} \sigma_{11}\\
  2E_{23} &= S_{1123} \sigma_{11}\\
  2E_{13} &= S_{1113} \sigma_{11}\\
  2E_{12} &= S_{1112} \sigma_{11}
\end{aligned}\\]

-   *S*<sub>1111</sub> is familiar, acting like 1/*E*<sub>*Y*</sub>



## poisson's ratio

-   For isotropic materials we defined Poisson's ratio as \\(\nu = -E_{22}/E_{11}\\)
-   For anisotropic materials, we can have a different Poisson's ratio acting in different directions
-   We define \\(\nu_{ij} = -E_{jj}/E_{ii}\\) (with no summation), the ratio of the transverse strain in the *j* direction when stress is applied in the *i* direction
-   For this example we can find \\(\nu_{12}\\) and \\(\nu_{13}\\) as
 
\\[\begin{aligned}
  \nu_{12} &= -E_{22}/E_{11} = -S_{1122}/S_{1111}\\
  \nu_{13} &= -E_{33}/E_{11} = -S_{1133}/S_{1111}
\end{aligned}\\]



## poisson's ratio

-   Note that we cannot, in general, say that \\(\nu_{12} = \nu_{21}\\)
-   However, due to the symmetry of the stiffness/compliance tensors, we know that
 
\\[\begin{aligned}
  \nu_{21} E_{x} &= \nu_{12} E_{y}\\
  \nu_{31} E_{x} &= \nu_{13} E_{z}\\
  \nu_{32} E_{y} &= \nu_{23} E_{z}
\end{aligned}\\]

-   Where \\(E_x\\) refer’s to the Young’s Modulus in the *x*-direction, etc.



## shear coupling coefficients

-   An unfamiliar effect is that shear strains can be introduced from a normal stress
-   We define shear coupling coefficients as \\(\eta_{1112} = \eta_{16} = -2E_{12}/E_{11}\\) due to \\(\sigma_{11}\\)
-   These coupling terms can also effect shear strain in a different plane from the applied shear stress
-   Like the Poisson's ratio, these are not entirely independent

\\[ \eta_{61} E_x = \eta_{16} G_6 \\]

-   Where \\(G_6\\) is the shear modulus in the 12 plane



## shear coupling coefficients

-   Shear coupling coefficients are sometimes placed in two groups
-   Coefficients of mutual influence relate shear stress to normal strain and normal stress to shear strain
-   Chentsov coefficients relate shear stress in one plane to shear strain in another plane
-   In general we can say

\\[\eta_{nm} E_m = \eta_{mn} G_n \qquad \text{(m = 1,2,3) (n = 4,5,6)} \\]

and

\\[\eta_{nm} G_m = \eta_{mn} G_n \qquad \text{(m,n = 4,5,6)} \qquad m \ne n \\]



## orthotropic symmetry

\\[\small \begin{bmatrix}
  \sigma_{11}\\
	\sigma_{22} \\
	\sigma_{33} \\\sigma_{23} \\
	\sigma_{13} \\
	\sigma_{12}
  \end{bmatrix}
  = \begin{bmatrix}
  C_{1111} & C_{1122} & C_{1133} & 0 & 0 & 0 \\
  C_{1122} & C_{2222} & C_{2233} & 0 & 0 & 0 \\
  C_{1133} & C_{2233} & C_{3333} & 0 & 0 & 0 \\
  0 & 0 & 0 & C_{2323} & 0 & 0 \\
  0 & 0 & 0 & 0 & C_{1313} & 0 \\
  0 & 0 & 0 & 0 & 0 & C_{1212}
  \end{bmatrix}\begin{bmatrix}
  E_{11}\\
	E_{22} \\
	E_{33} \\
	E_{23} \\
	2E_{13} \\
	2E_{12}
\end{bmatrix}\\]



## transversely isotropic symmetry

\\[\small \begin{bmatrix}
  \sigma_{11}\\
	\sigma_{22} \\
	\sigma_{33} \\\sigma_{23} \\
	\sigma_{13} \\
	\sigma_{12}
  \end{bmatrix}
  = \begin{bmatrix}
  C_{1111} & C_{1122} & C_{1133} & 0 & 0 & 0 \\
  C_{1122} & C_{1111} & C_{1133} & 0 & 0 & 0 \\
  C_{1133} & C_{1133} & C_{3333} & 0 & 0 & 0 \\
  0 & 0 & 0 & C_{1313} & 0 & 0 \\
  0 & 0 & 0 & 0 & C_{1313} & 0 \\
  0 & 0 & 0 & 0 & 0 & 1/2(C_{1111}-C_{2222})
  \end{bmatrix}\begin{bmatrix}
  E_{11}\\
	E_{22} \\
	E_{33} \\
	E_{23} \\
	2E_{13} \\
	2E_{12}
\end{bmatrix}\\]



## isotropic symmetry

\\[\scriptsize \begin{bmatrix}
  \sigma_{11}\\
	\sigma_{22} \\
	\sigma_{33} \\\sigma_{23} \\
	\sigma_{13} \\
	\sigma_{12}
  \end{bmatrix}
  = \frac{E}{(1+\nu)(1-2\nu)}\begin{bmatrix}
  1-\nu & \nu & \nu & 0 & 0 & 0 \\
  \nu & 1-\nu & \nu & 0 & 0 & 0 \\
  \nu & \nu & 1-\nu & 0 & 0 & 0 \\
  0 & 0 & 0 & \frac{1}{2}(1-2\nu) & 0 & 0 \\
  0 & 0 & 0 & 0 & \frac{1}{2}(1-2\nu) & 0 \\
  0 & 0 & 0 & 0 & 0 & \frac{1}{2}(1-2\nu)
  \end{bmatrix}\begin{bmatrix}
  E_{11}\\
	E_{22} \\
	E_{33} \\
	E_{23} \\
	2E_{13} \\
	2E_{12}
\end{bmatrix}\\]



## next class

-   Next class we will develop transformation laws for engineering stress/strain and stiffness
